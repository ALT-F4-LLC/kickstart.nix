name: Test languages

on:
  pull_request:
  push:
    branches:
      - main

env:
  CACHIX_BINARY_CACHE: altf4llc-os

jobs:
  default:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        template:
          - bash
          - cpp-cmake
          - dart
          - go-mod
          - haskell
          - lua-app
          - nodejs-backend
          - nestjs
          - ocaml
          - php
          - powershell
          - python-app
          - python-pkg
          - rust
          - swiftpm
          - zig
          - vite-react
    steps:
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v15
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: ${{ env.CACHIX_BINARY_CACHE }}
      - uses: actions/checkout@v4
      - run: mkdir -p "${{ runner.temp }}/build"
      - run: nix develop -c just build-language "${{ matrix.template }}" "default" "${{ runner.temp }}/build"

  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        template:
          - bash
          - cpp-cmake
          - dart
          - go-mod
          - haskell
          - nodejs-backend
          - nestjs
          - ocaml
          - php
          - powershell
          - python-app
          - rust
          - swiftpm
          - zig
    steps:
      - uses: cachix/install-nix-action@v30
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v15
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: ${{ env.CACHIX_BINARY_CACHE }}
      - uses: actions/checkout@v4
      - run: mkdir -p "${{ runner.temp }}/build"
      - run: nix develop -c just build-language "${{ matrix.template }}" "docker" "${{ runner.temp }}/build"
